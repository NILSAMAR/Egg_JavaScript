/*-----------------------------------------------------------------------
32.6  Actividad Complementaria: Creando una Calculadora
/*-----------------------------------------------------------------------*/
/*OBJETO: En esta actividad, desarrollar√°s una calculadora b√°sica con las operaciones 
de suma, resta, multiplicaci√≥n, divisi√≥n, potencias, ra√≠z cuadrada, ra√≠z c√∫bica. 
Para este ejercicio tienes que seguir los siguientes pasos: */
/**
üçÅDesde Visual Studio Code, abre la carpeta calculator desarrollada en secciones anteriores.
üçÅCrea un nuevo script calculator.js
üçÅComenta los otros scripts y conectar math.js con index.html del proyecto calculator.
üçÅDefine la clase de la calculadora: Esto incluir√° la estructura de la calculadora y los m√©todos para realizar las operaciones.
üçÅCrea una funci√≥n de inicializaci√≥n para configurar la calculadora y vincular los eventos.
üçÅAgrega las impresiones que creas convenientes para observar los resultados.
üçÅAbre con live server el archivo index.html y verifica las salidas programadas.
 */

/*
üçÅClase Calculator
M√©todos:
- sumar(a, b): Devuelve la suma de a y b.
-restar(a, b): Devuelve la resta de a y b.
-multiplicar(a, b): Devuelve el producto de a y b.
-dividir(a, b): Devuelve el resultado de dividir a por b. Si b es cero, devuelve un mensaje de error.
-potencia(base, exponente): Devuelve el resultado de elevar base al exponente usando Math.pow.
-raizCuadrada(a): Devuelve la ra√≠z cuadrada de a usando Math.sqrt.
-raizCubica(a): Devuelve la ra√≠z c√∫bica de a usando Math.cbrt.

üçÅFunci√≥n startCalculator
- Objetivo: Pedir al usuario elegir una operaci√≥n y luego ejecutar esa operaci√≥n con valores introducidos por el usuario.
üçÅFlujo:
-Creaci√≥n del objeto: Crea un objeto calculator de la clase Calculator para acceder a sus m√©todos.
-Elegir operaci√≥n: Usa prompt para pedir al usuario que elija una operaci√≥n entre sumar, restar, multiplicar, dividir, potencia, 
ra√≠z cuadrada y ra√≠z c√∫bica.
-Ejecutar operaci√≥n:
***Dependiendo de la operaci√≥n seleccionada, solicita uno o dos n√∫meros al usuario y 
***llama al m√©todo correspondiente de Calculator.
***Usa parseFloat para convertir las entradas a n√∫meros decimales.
***Al realizar la divisi√≥n, comprueba si el divisor es cero para evitar errores.
Mostrar resultado: Muestra el resultado de la operaci√≥n seleccionada con un alert.
Manejo de operaciones desconocidas: Si el usuario introduce un valor que no corresponde a ninguna operaci√≥n conocida, muestra un mensaje de error. */



// Clase que define varias operaciones matem√°ticas
class Calculator {
    // M√©todo para sumar dos n√∫meros
    sumar(a, b) {
        return a + b; // Retorna la suma de a y b
    }

    // M√©todo para restar dos n√∫meros
    restar(a, b) {
        return a - b; // Retorna la resta de b desde a
    }

    // M√©todo para multiplicar dos n√∫meros
    multiplicar(a, b) {
        return a * b; // Retorna el producto de a y b
    }

    // M√©todo para dividir dos n√∫meros
    dividir(a, b) {
        if (b === 0) { // Verifica si el divisor es cero
            return "Error: Divisi√≥n por cero"; // Retorna un mensaje de error
        }
        return a / b; // Retorna la divisi√≥n de a entre b
    }

    // M√©todo para calcular la potencia
    potencia(base, exponente) {
        return Math.pow(base, exponente); // Calcula base elevado al exponente
    }

    // M√©todo para calcular la ra√≠z cuadrada
    raizCuadrada(a) {
        return Math.sqrt(a); // Retorna la ra√≠z cuadrada de a
    }

    // M√©todo para calcular la ra√≠z c√∫bica
    raizCubica(a) {
        return Math.cbrt(a); // Retorna la ra√≠z c√∫bica de a
    }
}

// Funci√≥n que inicia la calculadora y ejecuta la operaci√≥n seleccionada por el usuario
function startCalculator() {
    // Crea un nuevo objeto de la clase Calculator para usar sus m√©todos
    const calculator = new Calculator();

    // Solicita al usuario que elija una operaci√≥n
    const operation = prompt("Elige una operaci√≥n (sumar, restar, multiplicar, dividir, potencia, raiz cuadrada, raiz cubica):");

    let result; // Variable para almacenar el resultado de la operaci√≥n

    // Compara la operaci√≥n elegida por el usuario y ejecuta la correspondiente
    if (operation === 'sumar') {
        // Si elige sumar, pide dos n√∫meros y los suma
        const num1 = parseFloat(prompt("Ingresa el primer n√∫mero:")); // Convierte el input a n√∫mero decimal
        const num2 = parseFloat(prompt("Ingresa el segundo n√∫mero:"));
        result = calculator.sumar(num1, num2); // Llama al m√©todo sumar
    } else if (operation === 'restar') {
        const num1 = parseFloat(prompt("Ingresa el primer n√∫mero:"));
        const num2 = parseFloat(prompt("Ingresa el segundo n√∫mero:"));
        result = calculator.restar(num1, num2); // Llama al m√©todo restar
    } else if (operation === 'multiplicar') {
        const num1 = parseFloat(prompt("Ingresa el primer n√∫mero:"));
        const num2 = parseFloat(prompt("Ingresa el segundo n√∫mero:"));
        result = calculator.multiplicar(num1, num2); // Llama al m√©todo multiplicar
    } else if (operation === 'dividir') {
        const num1 = parseFloat(prompt("Ingresa el primer n√∫mero:"));
        const num2 = parseFloat(prompt("Ingresa el segundo n√∫mero:"));
        result = calculator.dividir(num1, num2); // Llama al m√©todo dividir
    } else if (operation === 'potencia') {
        const base = parseFloat(prompt("Ingresa la base:")); // Pide la base
        const exponente = parseFloat(prompt("Ingresa el exponente:")); // Pide el exponente
        result = calculator.potencia(base, exponente); // Llama al m√©todo potencia
    } else if (operation === 'raiz cuadrada') {
        const num = parseFloat(prompt("Ingresa el n√∫mero:")); // Pide el n√∫mero para la ra√≠z cuadrada
        result = calculator.raizCuadrada(num); // Llama al m√©todo raizCuadrada
    } else if (operation === 'raiz cubica') {
        const num = parseFloat(prompt("Ingresa el n√∫mero:")); // Pide el n√∫mero para la ra√≠z c√∫bica
        result = calculator.raizCubica(num); // Llama al m√©todo raizCubica
    } else {
        // Si la operaci√≥n no es reconocida, muestra un mensaje de error
        result = "Operaci√≥n desconocida";
    }

    // Muestra el resultado al usuario
    alert(`El resultado es: ${result}`);
}

// Inicia la calculadora llamando a startCalculator
startCalculator();

