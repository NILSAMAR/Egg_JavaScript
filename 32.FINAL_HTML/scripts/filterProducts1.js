
function captureText() {//FUNCION CAPTURETEXT
    console.log("capturado");//IMPRIME CONSOLA CAPTURADO
}

/*-----------------------------------------------------------------------
33. Actividad: asignaci√≥n de evento de teclado con event listener
/*-----------------------------------------------------------------------*/
/*OBJETIVO:En esta actividad, s√≥lo te enfocar√°s en modificar el evento de 
teclado del input de tipo texto de la barra de navegaci√≥n de manera que 
funcione con un escuchador de eventos. Para este ejercicio tienes que 
seguir los siguientes pasos:
*/
/*PASOS*/
/*
üíßDesde Visual Studio Code, abre la carpeta store y luego el archivo index.html
üíßQuita el atributo onkeyup del input de tipo texto ya que implementar√°s otra 
forma: el escuchador de eventos y agrega el atributo id=‚Äùsearch‚Äù. 
üíßAbre el archivo filterProducts.js y define una variable searchSelector, para 
seleccionar con el m√©todo querySelector el input de tipo texto de la vista principal. */

// Selecciona el input con el ID "search"
const searchSelector = document.querySelector("#search");
/*
üíßEl selector debe escuchar un evento con el m√©todo addEventListener. El evento debe 
ser de tipo keyup para que cada tecla presionada ejecute la funci√≥n captureText. A modo de ejemplo:
searchSelector.addEventListener("keyup", captureText);*/

searchSelector.addEventListener("keyup", captureText);


/*
üíßAbre con live server el archivo index.html y observa la correcta impresi√≥n por consola 
de cada tecla presionada..

NOTAS
Pruebas con Live Server
Inicia Live Server para probar:
Despu√©s de hacer estos cambios, inicia Live Server en tu archivo index.html. 
Luego, abre la consola del navegador y comienza a escribir en el input de texto 
para verificar si el evento keyup est√° siendo capturado.
Observa el resultado en la consola:
Mientras escribes en el input, deber√≠as ver en la consola los mensajes que 
indican qu√© tecla se presion√≥. 
Esto confirma que el escuchador de eventos est√° funcionando correctamente.*/