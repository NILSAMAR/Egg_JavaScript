/*-----------------------------------------------------------------------
32.3.1   Actividad: Renderizando los productos con un template string*/
/*-----------------------------------------------------------------------*/
/*OBJETIVO:En esta actividad, vas a mejorar la vista principal del proyecto store de 
las secciones anteriores para renderizar las tarjetas de producto con m√©todos del DOM. 
La tarjeta ya fue maquetada en el curso de HTML-CSS y deber√≠a renderizarse de la siguiente manera:*/

/*PASOS*/
/*
-Crea el archivo productCards.js en la carpeta scripts y conectalo con la vista principal. Deber√≠as tener tres scripts (layout, products y productCards). 
-Analiza el c√≥digo del archivo index.html e identifica la etiqueta que es ‚Äúpadre‚Äù de las tarjetas de los productos.
-Asigna a esa etiqueta un id=‚Äùproducts‚Äù para usar como selector de JavaScript. */


/*
4. Corta el contenido de todas las tarjetas de productos.
5. Abre el archivo productCards.js y define una variable productsSelector, para seleccionar con el m√©todo getElementById la etiqueta 
correspondiente donde se renderizar√°n las tarjetas de productos.A modo de ejemplo:*/

const productsSelector = document.getElementById("products");



/*-----------------------------------------------------------------------
32.3.2  Actividad: Renderizar los productos de forma din√°mica*/
/*-----------------------------------------------------------------------*/
/*Las tarjetas simplemente fueron ‚Äúimpresas‚Äù en la vista, pero siguen siendo datos est√°ticos. En esta actividad, 
vas a mejorar la vista principal del proyecto store para renderizar las tarjetas de producto de forma din√°mica. 
Para este ejercicio vas a seguir los siguientes pasos:*/

/*
üçÅ10. Abre productCards.js y define una funci√≥n createCard para que reciba como par√°metro un objeto y devuelva un 
template string con s√≥lo una tarjeta de producto. El objeto a recibir por la funci√≥n ser√° un producto con todas 
las propiedades definidas en la clase. 



üçÅ11. Modifica cada dato ‚Äúest√°tico‚Äù de la tarjeta por la correspondiente propiedad del objeto product. Recuerda que en 
el template string se ‚Äúinvocan‚Äù variables de js con ${ }. A modo de ejemplo:
*/

// Funci√≥n para crear una tarjeta de producto a partir de un objeto
function createCard(product) {
  return `
    <a class="product-card" href="./details.html?id=${product.id}">
      <img
        class="product-img"
        src="${product.images[0]}"
        alt="${product.title}"
      />
      <div class="product-info">
        <span class="product-title">${product.title}</span>
        <span class="product-description">${product.description}</span>
        <div class="product-price-block">
          <span class="product-price">$${product.price}</span>
          <span class="product-discount">${product.discount}% Off</span>
        </div>
        <div class="product-tax-policy">
          Incluye impuesto Pa√≠s y percepci√≥n AFIP
        </div>
      </div>
    </a>
  `;
}

/*
üçÅReemplaza el contenido de la variable productsTemplate con una itera
ci√≥n for of para que cada vuelta ‚Äúcargue‚Äù una tarjeta de producto. */

let productsTemplate = ""; // Comienza con cadena vac√≠a//let para que te permita modificar
// Itera sobre los productos y agrega las tarjetas a la plantilla
for (const product of products) {
  productsTemplate += createCard(product); // Concatenar con "+="
}
/*
üçÅImprime el contenido en el selector con la propiedad innerHTML.*/
// Inserta las tarjetas de productos en el selector correspondiente
productsSelector.innerHTML = productsTemplate;

/*
üçÅAbre con live server el archivo index.html y observa las tarjetas de producto.
üçÅPrograma y verifica la vista la cantidad de veces que sea necesario para que las tarjetas se rendericen y funcionen correctamente.
 */
